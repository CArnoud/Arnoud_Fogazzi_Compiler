#ifndef SYNTAX_TREE_H
#define SYNTAX_TREE_H

#define MAX_CHILDREN 4
#include "hash.h"

typedef enum {
	AST_LIT_STRING, AST_LIT_CHAR, AST_LIT_INTEGER, AST_LIT_TRUE, AST_LIT_FALSE,
	AST_ARRAY, AST_VARIABLE,
	AST_KW_WORD, AST_KW_BOOL, AST_KW_BYTE,
	AST_SIMPLE_DECLARATION, AST_POINTER_DECLARATION, AST_ARRAY_DECLARATION,
	AST_PARENTHESIS,
	AST_OPERATOR_NOT, AST_OPERATOR_REF, AST_OPERATOR_DEREF,
	AST_OPERATOR_ADD, AST_OPERATOR_SUB, AST_OPERATOR_MUL, AST_OPERATOR_DIV,
	AST_OPERATOR_LESS, AST_OPERATOR_GREATER, AST_OPERATOR_LE, AST_OPERATOR_GE,
	AST_OPERATOR_EQ, AST_OPERATOR_NE, AST_OPERATOR_AND, AST_OPERATOR_OR,
	AST_LIT_LIST
} AST_TYPE;

typedef struct _syntaxTree {
	AST_TYPE type;
	int value; 
	struct _syntaxTree *child[MAX_CHILDREN];
} syntaxTree;

syntaxTree* create_AST_node(int, int, syntaxTree*, syntaxTree*, syntaxTree*, syntaxTree*);

void astWriteToFile(syntaxTree*, FILE*);



#endif